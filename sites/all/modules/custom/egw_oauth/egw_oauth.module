<?php

/**
 * Implements hook_menu().
 */
function egw_oauth_menu() {
  $items['auth'] = array(
    'page callback' => 'egw_oauth_token_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['auth/login'] = array(
    'page callback' => 'egw_oauth_login_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function egw_oauth_login_callback() {
  /*
  global $user;
  $user = user_load(2054);
  drupal_session_regenerate();
  drupal_goto('user');
*/

  $server_url = 'https://egwwritings.org/api/stable/auth';
  $client_url = '';
  $oauth2_config = array(
    'token_endpoint' => $server_url.'/token',
    'auth_flow' => 'server-side',
    'redirect_uri' => 'http://library.ellenwhite.org/auth/',
    'authorization_endpoint' => $server_url,
    'client_id' => 'RfznKiGZzQTHzrnZFi6tNSEbrb3bhzE3F3deaK5znK7K3iytzrN87eakh3ntkTfS',
    'client_secret' => 'HkZHZQ79k5Hbb6yBh8zedzskkGFAnQeZ35yNGsKYhhZkdfNkd8tfyKyHf38yEbfs',
    'scope' => 'user_info',
  );
  try {
    $oauth2_client = new OAuth2\Client($oauth2_config);
    $access_token = $oauth2_client->getAccessToken();
  }
  catch (Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }
}

function egw_oauth_token_callback() {
  if (isset($_GET['error'])) {
    $error = $_GET['error'];
    $error_description = $_GET['error_description'];
    drupal_set_message("Error: $error: $error_description", 'error');
    drupal_goto('user');
  }

  $client_id = 'RfznKiGZzQTHzrnZFi6tNSEbrb3bhzE3F3deaK5znK7K3iytzrN87eakh3ntkTfS';
  $client_secret = 'HkZHZQ79k5Hbb6yBh8zedzskkGFAnQeZ35yNGsKYhhZkdfNkd8tfyKyHf38yEbfs';
  $options = array(
    'method' => 'POST',
    'data' => http_build_query(array(
      'grant_type' => 'authorization_code',
      'code' => $_GET['code'],
      'client_id' => $client_id,
      'client_secret' => $client_secret,
      'redirect_uri' => 'http://library.ellenwhite.org/auth/',
    )),
    'headers' => array(
      'Content-Type' => 'application/x-www-form-urlencoded',
      'Authorization' => 'Basic ' . base64_encode("$client_id:$client_secret"),
    ),
  );
  $token_endpoint = 'https://egwwritings.org/api/stable/auth/token/';
  $result = drupal_http_request($token_endpoint, $options);
  krumo($result);
  if ($result->code != 200) {
   $error_data = json_decode($result->data);
    drupal_set_message("Error: $error_data->error: $error_data->error_description", 'error');

  }
  $token = json_decode($result->data);

  $options = array(
    'method' => 'POST',
    'data' => http_build_query(array(
      'client_id' => $client_id,
      'client_secret' => $client_secret,
      'access_token' => $token->access_token,
      'token_type' => $token->token_type,
    )),
    'headers' => array(
      // 'Content-Type' => 'application/x-www-form-urlencoded',
      'Authorization' => 'Bearer '.$token->access_token,
    ),
  );
  $token_endpoint = 'https://egwwritings.org/api/2.3/info/';
  $login_cred = drupal_http_request($token_endpoint, $options);
  if ($login_cred->code != 200) {

  }


  krumo($login_cred);
$user_cred = json_decode($login_cred->data);
  krumo($user_cred);
}