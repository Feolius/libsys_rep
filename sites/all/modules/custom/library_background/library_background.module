<?php

/**
 * Implements hook_menu().
 */
function library_background_menu() {
  $items = array();
  $items['admin/config/background'] = array(
    'title' => t('Variations background images'),
    'description' => t('This page is contain all settings for background images.'),
    'position' => 'left',
    'weight' => -5,
    'page callback' => 'library_background_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'library_background.admin.inc',
  );
  $items['admin/config/background/homepage-settings'] = array(
    'title' => t('Background images homepage configuration page'),
    'description' => t('This page is contain all settings for the homepage.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('library_background_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'library_background.admin.inc',
  );
  $items['admin/config/background/pages-settings'] = array(
    'title' => t('Background images others pages configuration page'),
    'description' => t('This page is contain all settings for others pages.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('library_background_pages_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'library_background_pages.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_init().
 */
function library_background_init() {
  drupal_add_js(drupal_get_path('module', 'library_background') . '/library_background.js');
  drupal_add_css(drupal_get_path('module', 'library_background') . '/library_background.css');
  if (!variable_get('library_background_exclude_main_background')) {
    drupal_add_css(drupal_get_path('module', 'library_background') . '/bg.css');
  }
}

/**
 * Helping function for get random background image by id.
 */
function library_background_homepage_get_css() {
  $image = array();
  $image['url'] = library_background_homepage_get_file_random();
  $importand = variable_get('library_background_homepage_css_important');
  $image['css_repeat'] = variable_get('library_background_homepage_css_repeat');
  $css_hp = variable_get('library_background_homepage_css_h_position', '');
  $image['css_h_position'] = $css_hp == 'other'
    ? variable_get('library_background_homepage_css_h_position_other') . 'px '
    : $css_hp;
  $css_vp = variable_get('library_background_homepage_css_v_position');
  $image['css_v_position'] = $css_vp == 'other'
    ? variable_get('library_background_homepage_css_v_position_other') . 'px '
    : $css_vp;
  $image['css_attachment'] = variable_get('library_background_homepage_css_attachment');
  $image['important'] = isset($importand) && $importand != FALSE ? ' !important' : '';
  return $image;
}

/**
 * Helping function for get random background image by id.
 */
function library_background_simple_get_css() {
  $image['url'] = library_background_simple_get_file_random();
  $importand = variable_get('library_background_pages_css_important');
  $image['css_repeat'] = variable_get('library_background_pages_css_repeat');
  $css_hp = variable_get('library_background_pages_css_h_position', '');
  $image['css_h_position'] = $css_hp == 'other'
    ? variable_get('library_background_pages_css_h_position_other') . 'px '
    : $css_hp;
  $css_vp = variable_get('library_background_pages_css_v_position');
  $image['css_v_position'] = $css_vp == 'other'
    ? variable_get('library_background_pages_css_v_position_other') . 'px '
    : $css_vp;
  $image['css_attachment'] = variable_get('library_background_pages_css_attachment');
  $image['important'] = isset($importand) && $importand != FALSE ? ' !important' : '';
  $image['exclude'] = variable_get('library_background_exclude_main_background');
  return $image;
}

/**
 * Process variables for html.tpl.php.
 *
 * @see html.tpl.php
 */
function library_background_preprocess_html(&$variables) {
  global $theme;
  $options = array(
    'type' => 'inline',
    'group' => CSS_DEFAULT,
  );
  if ($variables['is_front'] == TRUE) {
    $file = library_background_homepage_get_css();
    if (!empty($file['url'])) {
      $css = 'body' . ' { background: url("' . $file['url'] . '") !important;
      background-repeat: ' . $file['css_repeat'] . $file['important'] . ';
      background-position: ' . $file['css_h_position'] . ' ' . $file['css_v_position'] . $file['important'] . ';
      background-attachment: ' . $file['css_attachment'] . $file['important'] . '}';
      drupal_add_css($css, $options);
    }
  } else {
    if ($theme == 'ellen_white_estate') {
      $file = library_background_simple_get_css();
      if (!empty($file['url'])) {
        $css = 'body' . ' { background: url("' . $file['url'] . '") !important;
        background-repeat: ' . $file['css_repeat'] . $file['important'] . ';
        background-position: ' . $file['css_h_position'] . ' ' . $file['css_v_position'] . $file['important'] . ';
        background-attachment: ' . $file['css_attachment'] . $file['important'] . '}';
        drupal_add_css($css, $options);
      }
    }
  }
}

/**
 * This is helper function that will build the thumb folder
 * for the background images.
 *
 * @param unknown_type $file
 */
function library_background_get_thumbnail($file) {
  $image = theme_image_style(
    array(
      'style_name' => 'thumbnail',
      'path' => $file->uri,
      'width' => '50px',
      'height' => '50px',
      'alt' => $file->filename,
      'title' => $file->filename,
      'attributes' => array(
        'class' => array('uploaded-image'),
        'id' => $file->fid,
      )
    )
  );
  return $image;
}

function library_background_load_files($homepage = TRUE) {
  $output = '';
  if ($homepage == TRUE) {
    $files = library_background_homepage_images_list(TRUE);
  } else {
    $files = library_background_simple_images_list(TRUE);
  }
  if (!empty($files) && is_array($files)) {
    foreach ($files as $uploaded_file) {
      $thumb = library_background_get_thumbnail($uploaded_file);
      $output .= $thumb;
    }
  }
  return $output;
}

/**
 * Callback for the submit of admin form for homepage fieldset.
 */
function library_background_homepage_image_submit($form, &$form_state) {
  $saved_files = array();
  $files = variable_get('library_background_homepage_images');
  if (!empty($files)) {
    $ids = library_background_check_hp_files(explode(',', $files));
  } else {
    $ids = array();
  }
  if ($images = $form_state['values']['library_background_homepage_image']) {
    $scheme = variable_get('file_default_scheme', 'public') . '://';
    $public_dir = variable_get('file_public_path', conf_path() . '/files');
    if (empty($public_dir)) {
      $public_dir = 'sites/default/files';
    }
    if (!is_dir($public_dir . '/hp/')) {
      drupal_mkdir($public_dir . '/hp/');
    }
    $scheme .= 'hp/';
    foreach ($images as $uploaded_file) {
      if ($uploaded_file['status'] == 'done') {
        $source = $uploaded_file['tmppath'];
        $destination = file_stream_wrapper_uri_normalize($scheme . $uploaded_file['name']);
        $destination = file_unmanaged_move($source, $destination, FILE_EXISTS_RENAME);
        $file = plupload_file_uri_to_object($destination);
        file_save($file);
        drupal_write_record('files', $file);
        if (file_exists($public_dir . '/hp/' . $file->filename)) {
          $ids[] = $file->fid;
          $saved_files[] = $file;
        }
      }
      else {
        form_set_error('pud', "Upload of {$uploaded_file['name']} failed");
      }
    }
    $fids = implode(',', $ids);
    variable_set('library_background_homepage_images', $fids);
    cache_clear_all();
  }
}

/**
 * Callback for the submit of admin form for others pages fieldset.
 */
function library_background_others_pages_bgs_form_submit($form, $form_state) {
  $saved_files = array();
  $images = variable_get('library_background_simple_images');
  if (!empty($images)) {
    $ids = library_background_check_oth_files(explode(',', $images));
  } else {
    $ids = array();
  }
  if ($images = $form_state['values']['library_background_pages_image']) {
    $scheme = variable_get('file_default_scheme', 'public') . '://';
    $public_dir = variable_get('file_public_path', conf_path() . '/files');
    if (empty($public_dir)) {
      $public_dir = 'sites/default/files';
    }
    if (!is_dir($public_dir . '/oth/')) {
      drupal_mkdir($public_dir . '/oth/');
    }
    $scheme .= 'oth/';
    foreach ($images as $uploaded_file) {
      if ($uploaded_file['status'] == 'done') {
        $source = $uploaded_file['tmppath'];
        $destination = file_stream_wrapper_uri_normalize($scheme . $uploaded_file['name']);
        $destination = file_unmanaged_move($source, $destination, FILE_EXISTS_RENAME);
        $file = plupload_file_uri_to_object($destination);
        file_save($file);
        drupal_write_record('files', $file);
        if (file_exists($public_dir . '/oth/' . $file->filename)) {
          $ids[] = $file->fid;
          $saved_files[] = $file;
        }
      }
      else {
        form_set_error('pud', "Upload of {$uploaded_file['name']} failed");
      }
    }
    $fids = implode(',', $ids);
    variable_set('library_background_simple_images', $fids);
    cache_clear_all();
  }
}

/**
 * Helper function for checking the files for homepage.
 */
function library_background_check_hp_files($fids) {
  $files = file_load_multiple($fids);
  return array_map(function ($file) {
    $images = array();
    $public_dir = variable_get('file_public_path', conf_path() . '/files');
    if (empty($public_dir)) {
      $public_dir = 'sites/default/files';
    }
    if (file_exists($public_dir . '/hp/' . $file->filename)) {
      return $images[] = $file->fid;
    }
  }, $files);
}

/**
 * Helper function for checking the files for others pages.
 */
function library_background_check_oth_files($fids) {
  $files = file_load_multiple($fids);
  return array_map(function ($file) {
    $images = array();
    $public_dir = variable_get('file_public_path', conf_path() . '/files');
    if (empty($public_dir)) {
      $public_dir = 'sites/default/files';
    }
    if (file_exists($public_dir . '/oth/'. $file->filename)) {
      return $images[] = $file->fid;
    }
  }, $files);
}

/**
 * Helper function for create list of images.
 */
function library_background_homepage_images_list($full = FALSE) {
  $images_ids = variable_get('library_background_homepage_images');
  if (!empty($images_ids)) {
    $fids = explode(',', $images_ids);
    $files = file_load_multiple($fids);
    if (!empty($files)) {
      if ($full == FALSE) {
        foreach ($files as $file) {
          $images[] = file_create_url($file->uri);
        }
        cache_set('library_background_homepage_images', $images);
      return $images;
      } else {
        return $files;
      }
    }
  }
}

/**
 * Helper function for create list of images.
 */
function library_background_simple_images_list($full = FALSE) {
  $images_ids = variable_get('library_background_simple_images');
  if (!empty($images_ids)) {
    $fids = explode(',', $images_ids);
    $files = file_load_multiple($fids);
    if (!empty($files)) {
      if ($full == FALSE) {
        foreach ($files as $file) {
          $images[] = file_create_url($file->uri);
        }
        cache_set('library_background_simple_images', $images);
        return $images;
      } else {
        return $files;
      }
    }
  }
}

/**
 * Helper function for getting random image.
 */
function library_background_homepage_get_file_random() {
  $img = '';
  $bgs = cache_get('library_background_homepage_images');
  if (empty($bgs->data)) {
    $bgs = library_background_homepage_images_list();
    if (!empty($bgs)) {
      $id = array_rand($bgs);
      $img = $bgs[$id];
    }
  } else {
    if (!empty($bgs->data)) {
      $id = array_rand($bgs->data);
      $img = $bgs->data[$id];
    }
  }
  return $img;
}

/**
 * Helper function for getting random image.
 */
function library_background_simple_get_file_random() {
  $img = '';
  $bgs = cache_get('library_background_simple_images');
  if ($bgs == FALSE || empty($bgs->data)) {
    $bgs = library_background_simple_images_list();
    if (!empty($bgs)) {
      $id = array_rand($bgs);
      $img = $bgs[$id];
    }
  } else {
    if (!empty($bgs->data)) {
      $id = array_rand($bgs->data);
      $img = $bgs->data[$id];
    }
  }
  return $img;
}

/**
 * Callback for deleting images from list of uploaded images.
 */
function library_background_homepage_uploaded_images_remove_callback($form, &$form_state) {
  if ($need_deleted  = $form_state['input']['library_background_deleted_image']) {
    $fids = explode(', ', $need_deleted);
    $files = file_load_multiple($fids);
    foreach ($files as $file) {
      file_delete($file);
    }
  }
}

function library_background_others_pages_uploaded_images_remove_callback($form, &$form_state) {
  if ($need_deleted  = $form_state['input']['library_background_deleted_image']) {
    $fids = explode(', ', $need_deleted);
    $files = file_load_multiple($fids);
    foreach ($files as $file) {
      file_delete($file);
    }
  }
}
