<?php

/**
 * Implements hook_facetapi_widgets().
 */
function facetapi_library_term_widget_facetapi_widgets() {
  return array(
    'facetapi_library_term_widget' => array(
      'handler' => array(
        'label' => t('Library terms'),
        'class' => 'FacetapiWidgetLibraryTerm',
        'query types' => array('term'),
      ),
    ),
  );
}

/**
 * Implements hook_forms().
 */
function facetapi_library_term_widget_forms($form_id, $args) {
  $forms = array();
  $searcher_info = facetapi_get_searcher_info();
  $searchers = array_keys($searcher_info);
  $searcher = array_shift($searchers);
  $adapter = facetapi_adapter_load($searcher);
  $enabled_facets = $adapter->getEnabledFacets();
  foreach ($enabled_facets as $enabled_facet) {
    $forms['facetapi_library_term_widget_' . $enabled_facet['name'] . '_form'] = array(
      'callback' => 'facetapi_library_term_widget_filter_form',
    );
  }
  return $forms;
}

function facetapi_library_term_widget_filter_form($form, &$form_state, $args) {
  $options = $args['options'];
  $facet_name = $args['facet name'];
  $field_alias = $args['field alias'];
  //Unfortunately there can be such situation when few forms with one form id will be in one page.
  //To prevent possible conflicts we should define what HTML form id will this form have and put it in Drupal js settings.
  $form_id = $form_state['build_info']['form_id'];
  $form_id = strtr(drupal_strtolower($form_id), array(' ' => '-', '_' => '-', '[' => '-', ']' => ''));
  $form_id = preg_replace('/[^A-Za-z0-9\-_]/', '', $form_id);
  $form_id = preg_replace('/\-+/', '-', $form_id);
  $seen_ids = & drupal_static('drupal_html_id');
  if (isset($seen_ids[$form_id])) {
    $seen_id = $seen_ids[$form_id] + 1;
    $form_id = $form_id . '--' . $seen_id;
  }
  else {
    $seen_id = 1;
  }
  if ($seen_id == 1) {
    $select_id = 'facetapi-select-term-' . $facet_name;
    $container_id = 'facetapi-term-item-container-' . $facet_name;
    $marker_class = 'facetapi-term-marker-' . $facet_name;
  }
  else {
    $select_id = 'facetapi-select-term-' . $facet_name . '-' . $seen_id;
    $container_id = 'facetapi-term-item-container-' . $facet_name . '-' . $seen_id;
    $marker_class = 'facetapi-term-marker-' . $facet_name . '-' . $seen_id;
  }
  $get_params = array_diff_key($_GET, array('q' => 1, 'page' => 1, 'solrsort' => 1, 'retain-filters' => 1));
  $default_value = array();
  $default_items = array();
  if (isset($get_params['f'])) {
    $f = $get_params['f'];
    $rewrite_session = TRUE;
    foreach ($f as $key => $row) {
      $arr = explode(':', $row);
      if ($arr[0] == $field_alias) {
        $default_value[] = $arr[1];
        //Trying to get correct labels from facet options
        if(!empty($options[$arr[1]])){
          $default_items[$arr[1]] = $options[$arr[1]];
          unset($options[$arr[1]]);
        }else{
          //If facet get no variants then get it from session
          $default_items[$arr[1]] = $_SESSION[$field_alias][$form_id][$arr[1]];
          //If we take something from session, it means that current options is not for full for some reasons. So, we shouldn't rewrite it for now
          $rewrite_session = FALSE;
        }
        break;
      }
    }
    if($rewrite_session){
      $_SESSION[$field_alias][$form_id] = $options;
    }
  }
  $default_value = drupal_json_encode($default_value);
  $settings = array(
    'forms' => array(
      $form_id => array(
        'selectId' => $select_id,
        'itemContainerId' => $container_id,
        'defaultItems' => $default_items,
        'markerClass' => $marker_class
      ),
    ),
  );
  drupal_add_library('system', 'ui.autocomplete');
  drupal_add_library('system', 'ui.button');
  drupal_add_js(drupal_get_path('module', 'facetapi_library_term_widget') . '/js/facetapi_library_term_widget.js');
  drupal_add_js(array('facetapi_library_term_widget' => $settings), 'setting');
  drupal_add_css(drupal_get_path('module', 'facetapi_library_term_widget') . '/css/facetapi_library_term_widget.css');
  $form = array(
    'title' => array(
      '#type' => 'item',
      '#markup' => '<h3>' . $args['label'] . '</h3>',
      '#weight' => -20,
    ),
    'select' => array(
      '#type' => 'select',
      '#options' => $options,
      '#validated' => TRUE,
      '#attributes' => array(
        'id' => $select_id,
      )
    ),
    'items' => array(
      '#type' => 'hidden',
      '#default_value' => $default_value,
      '#attributes' => array(
        'id' => $container_id,
      )
    ),
    'filter_button' => array(
      '#type' => 'submit',
      '#value' => t('Filter'),
      '#weight' => 14,
      '#submit' => array('facetapi_library_term_widget_filter_submit'),
    ),

  );
  return $form;
}

/**
 * Submit callback for filter forms
 */
function facetapi_library_term_widget_filter_submit($form, &$form_state) {
  $basic_path = $form_state['build_info']['args'][0]['search path'];
  $field_alias = $form_state['build_info']['args'][0]['field alias'];
  $get_params = array_diff_key($_GET, array('q' => 1, 'page' => 1, 'solrsort' => 1, 'retain-filters' => 1));
  //Find and remove corresponding get param to replace it on new one
  if (isset($get_params['f'])) {
    $f = $get_params['f'];
    foreach ($f as $key => $row) {
      $arr = explode(':', $row);
      if ($arr[0] == $field_alias) {
        unset($f[$key]);
      }
    }
  }
  $items = $form_state['input']['items'];
  $items = drupal_json_decode($items);
  foreach ($items as $item) {
    $f[] = $field_alias . ':' . $item;
  }
  if (!empty($f)) {
    $get_params['f'] = $f;
  }
  $options = array(
    'query' => $get_params
  );
  $form_state['redirect'] = array(
    $basic_path,
    $options,
    302
  );
}