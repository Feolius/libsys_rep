<?php

/**
 * Implements hook_block_info().
 */
function similar_files_block_info() {
  $blocks = array();
  $blocks['similar_files_block'] = array(
    'info' => t('Similar Files'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function similar_files_block_view($delta) {
  $base_view_name = 'similar_files';
  //Describe how much subblock would be for each type of primary media field
  // and also describe the subblock content, i.e. the information field and
  // the view display name
  $view_displays = array(
    'image' => array(
      'block_title' => 'More Images',
      'subblocks' => array(
        array(
          'field_name' => 'field_files_people_tags',
          'subblock_title' => 'Same People',
          'view_display_name' => 'same_people',
        ),
        array(
          'field_name' => 'field_files_location_tags',
          'subblock_title' => 'Same Location',
          'view_display_name' => 'same_location',
        ),
        array(
          'field_name' => 'field_files_event_tags',
          'subblock_title' => 'Same Event',
          'view_display_name' => 'same_event',
        ),
      ),
    ),
    'video' => array(
      'block_title' => 'More Videos',
      'subblocks' => array(
        array(
          'field_name' => 'field_files_people_tags',
          'subblock_title' => 'Same People',
          'view_display_name' => 'same_people',
        ),
        array(
          'field_name' => 'field_files_location_tags',
          'subblock_title' => 'Same Location',
          'view_display_name' => 'same_location',
        ),
        array(
          'field_name' => 'field_files_event_tags',
          'subblock_title' => 'Same Event',
          'view_display_name' => 'same_event',
        ),
      ),
    ),
    'audio' => array(
      'block_title' => 'More Audio Files',
      'subblocks' => array(
        array(
          'field_name' => 'field_files_topic_tags',
          'subblock_title' => 'Same Topic',
          'view_display_name' => 'same_topic',
        ),
        array(
          'field_name' => 'field_files_artist',
          'subblock_title' => 'Same Artist',
          'view_display_name' => 'same_artist',
        ),
      ),
    ),
    'document' => array(
      'block_title' => 'More Documents',
      'subblocks' => array(
        array(
          'field_name' => 'field_files_people_tags',
          'subblock_title' => 'Same People',
          'view_display_name' => 'same_people',
        ),
        array(
          'field_name' => 'field_files_location_tags',
          'subblock_title' => 'Same Location',
          'view_display_name' => 'same_location',
        ),
        array(
          'field_name' => 'field_files_event_tags',
          'subblock_title' => 'Same Event',
          'view_display_name' => 'same_event',
        ),
        array(
          'field_name' => 'field_files_author',
          'subblock_title' => 'Same Author',
          'view_display_name' => 'same_author',
        ),
      ),
    ),
  );


  $result = array(
    'content' => NULL,
  );

  $node = menu_get_object();
  if (is_object($node)
    && property_exists($node, 'type')
    && $node->type == 'files'
  ) {
    $primary_media = '';
    $primary_media_field_items = field_get_items('node', $node, 'field_files_primary_media');
    if (!empty($primary_media_field_items)) {
      $primary_media_item_value = array_shift($primary_media_field_items);
      $primary_media = isset($primary_media_item_value['value']) ? $primary_media_item_value['value'] : '';
    }
    if (!empty($primary_media) && isset($view_displays[$primary_media])) {
      //Get the subblocks for current primary media type
      $primary_media_type_settings = $view_displays[$primary_media];
      $content = '';
      foreach ($primary_media_type_settings['subblocks'] as $subblock_settings) {
        //For each subblock collect the specified field values, and cover them into
        //suitable for views contextual filters form
        $field_ids = similar_files_collect_node_ids_from_field($node, $subblock_settings['field_name']);
        if (!empty($field_ids)) {
          //Get the view output for precollected field values and specified display name
          $view_content = views_embed_view($base_view_name, $subblock_settings['view_display_name'], $primary_media, $field_ids);
          if (strpos($view_content, 'view-content') !== FALSE) {
            // Cover the view output by html div blocks and also add the header of current subblock
            $subblock_title = '<div class="subblock_title">' . $subblock_settings['subblock_title'] . '</div>';
            $subblock_content = '<div class="subblock_content">' . $view_content . '</div>';
            //Add subblock to the main block content
            $content .= $subblock_title . $subblock_content;
          }
        }
      }
      if (!empty($content)) {
        $result = array(
          'subject' => $primary_media_type_settings['block_title'],
          'content' => $content,
        );
      }
    }
  }

  return $result;
}

/**
 * Collect the referenced nodes ids and implode them into the string with commas (useful in
 * the contextual filters for views)
 *
 * @param $node
 * @param $field_name
 * @return string
 */
function similar_files_collect_node_ids_from_field($node, $field_name) {
  $result = '';
  if (property_exists($node, $field_name)
  ) {
    $field_items = field_get_items('node', $node, $field_name);
    if (!empty($field_items)) {
      foreach ($field_items as $item) {
        if (isset($item['target_id'])) {
          $result = empty($result) ? $item['target_id'] : implode(',', array($result, $item['target_id']));
        }
      }
    }
  }
  return $result;
}