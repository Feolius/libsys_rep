<?php

/**
 * Implements hook_filters_ui_field_type_info().
 */
function filters_ui_taxonomy_term_reference_filters_ui_field_type_info()
{
    return array('taxonomy_term_reference');
}

/**
 * Implements hook_filters_ui_delete_field().
 */
function filters_ui_taxonomy_term_reference_filters_ui_delete_field($field, $bundle, &$facet_filters_settings, $filter)
{
    if ($filter['state'] == 'visible') {
        $vocabulary_name = $field['settings']['allowed_values'][0]['vocabulary'];
        if (array_key_exists($bundle, $facet_filters_settings[$field['type']][$vocabulary_name])) {
            unset($facet_filters_settings[$field['type']][$vocabulary_name][$bundle]);
        }
    }
}

/**
 * Implements hook_filters_ui_add_field().
 */
function filters_ui_taxonomy_term_reference_filters_ui_add_field($field, $bundle, &$facet_filters_settings, $filter)
{
    if ($filter['state'] == 'visible') {
        $vocabulary_name = $field['settings']['allowed_values'][0]['vocabulary'];
        if (!isset($facet_filters_settings[$field['type']][$vocabulary_name])) {
            $facet_filters_settings[$field['type']][$vocabulary_name] = array();
        }
        $facet_filters_settings[$field['type']][$vocabulary_name][$bundle] = array();
    }
}

/**
 * Implements hook_filters_ui_filter_by().
 */
function filters_ui_taxonomy_term_reference_filters_ui_filter_by($field)
{
    $vocabulary = taxonomy_vocabulary_machine_name_load($field['settings']['allowed_values'][0]['vocabulary']);
    return 'Vocabulary ' . $vocabulary->name;
}


/**
 * Implements hook_field_update_field().
 */
function filters_ui_taxonomy_term_reference_field_update_field($field, $prior_field, $has_data)
{
    if ($field['type'] == 'taxonomy_term_reference') {
        $facet_filters_settings = drupal_json_decode(variable_get('facet_collection_filters_settings'));
        //Update information about current field in existing version of facet_collections_filters_settings common variable
        $old_vocabulary_name = $prior_field['settings']['allowed_values'][0]['vocabulary'];
        $new_vocabulary_name = $field['settings']['allowed_values'][0]['vocabulary'];
        if ($old_vocabulary_name != $new_vocabulary_name) {
            $facet_filters = drupal_json_decode(variable_get('facet_collection_filters'));
            foreach ($facet_filters as $bundle_name => $filters) {
                if (array_key_exists($field['field_name'], $filters) && $filters[$field['field_name']]['state'] == 'visible') {
                    unset($facet_filters_settings[$prior_field['type']][$old_vocabulary_name][$bundle_name]);
                    $facet_filters_settings[$field['type']][$new_vocabulary_name][$bundle_name] = array();
                }
            }
            variable_set('facet_collection_filters_settings', drupal_json_encode($facet_filters_settings));
        }
    }
}